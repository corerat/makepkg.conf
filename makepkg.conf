#!/hint/bash
# shellcheck disable=2034

#
# /etc/makepkg.conf
#

#########################################################################
# SOURCE ACQUISITION
#########################################################################
#
#-- The download utilities that makepkg should use to acquire sources
#  Format: 'protocol::agent'
DLAGENTS=('file::/usr/bin/curl -qgC - -o %o %u'
          'ftp::/usr/bin/curl -qgfC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -qgb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'https::/usr/bin/curl -qgb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/wget

#-- The package required by makepkg to download VCS sources
#  Format: 'protocol::package'
VCSCLIENTS=('bzr::breezy'
            'fossil::fossil'
            'git::git'
            'hg::mercurial'
            'svn::subversion')

#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################
#
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"

#-- Compiler and Linker Flags
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"

#-- Compiler and Linker Flags
CFLAGS="-march=znver1 -mtune=znver1 -O3 -pipe -fno-plt -fexceptions \
        -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection \
        -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Ofast \
        -ffast-math -fno-strict-aliasing -funsafe-math-optimizations"
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"
LDFLAGS="-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now \
         -Wl,-z,pack-relative-relocs -flto"
LTOFLAGS="-flto=auto"
MAKEFLAGS="-j2"
DEBUG_CFLAGS="-g"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"
RUSTFLAGS="-C opt-level=3 -C target-cpu=native -C panic=abort -C lto -C inline-threshold=1000 -C debuginfo=0 -C overflow-checks=off"
#########################################################################
# BUILD ENVIRONMENT
#########################################################################
#
# Makepkg defaults: BUILDENV=(!distcc !color !ccache check !sign)
#  A negated environment option will do the opposite of the comments below.
#
#-- distcc:   Use the Distributed C/C++/ObjC compiler
#-- color:    Colorize output messages
#-- ccache:   Use ccache to cache compilation
#-- check:    Run the check() function if present in the PKGBUILD
#-- sign:     Generate PGP signature file
#
BUILDENV=(!distcc color !ccache check !sign)
#
#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""
#
#-- Specify a directory for package building.
#BUILDDIR=/tmp/makepkg

#########################################################################
# GLOBAL PACKAGE OPTIONS
#   These are default values for the options=() settings
#########################################################################
#
# Makepkg defaults: OPTIONS=(!strip docs libtool staticlibs emptydirs !zipman !purge !debug !lto !autodeps)
#  A negated option will do the opposite of the comments below.
#
#-- strip:      Strip symbols from binaries/libraries
#-- docs:       Save doc directories specified by DOC_DIRS
#-- libtool:    Leave libtool (.la) files in packages
#-- staticlibs: Leave static library (.a) files in packages
#-- emptydirs:  Leave empty directories in packages
#-- zipman:     Compress manual (man and info) pages in MAN_DIRS with gzip
#-- purge:      Remove files specified by PURGE_TARGETS
#-- debug:      Add debugging flags as specified in DEBUG_* variables
#-- lto:        Add compile flags for building with link time optimization
#-- autodeps:   Automatically add depends/provides
#
#########################################################################
# OPTIONS - Simplified for End User
#########################################################################
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug lto)

# -- Disable logs
LOGFILE=/dev/null  # Don't log anything, or redirect to null

# -- File integrity checks to use (you can choose not to use any if you're not concerned with verification)
INTEGRITY_CHECK=(sha256)  # Keep SHA256 (default) for package verification; if not needed, you can remove it

#########################################################################
# STRIP BINARY OPTIONS - Minimize unnecessary files
#########################################################################
STRIP_BINARIES="--strip-all"     # Strip all unnecessary symbols from binaries
STRIP_SHARED="--strip-unneeded"  # Strip unneeded symbols from shared libraries
STRIP_STATIC="--strip-debug"    # Strip debug symbols from static libraries

#########################################################################
# MANUAL AND DOC REMOVAL - Remove docs and man pages
#########################################################################
# Disable documentation (to save space)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
MAN_DIRS=()  # Disable man/info compression entirely

#########################################################################
# PURGE TARGETS - Remove unnecessary files from all packages
#########################################################################
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)  # Remove unwanted package files

#########################################################################
# DEBUG SOURCES - Optionally disable debug sources
#########################################################################
DBGSRCDIR="/dev/null"  # Don't store debug sources (saves space)

#########################################################################
# LIBRARY DIRECTORIES - Leave as default unless you need specific paths
#########################################################################
LIB_DIRS=('lib:usr/lib' 'lib32:usr/lib32')


#########################################################################
# PACKAGE OUTPUT
#########################################################################
#
# Default: put built package and cached source in build directory
#
#-- Destination: specify a fixed directory where all packages will be placed
#PKGDEST=/home/packages
#-- Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
#-- Source packages: specify a fixed directory where all src packages will be placed
#SRCPKGDEST=/home/srcpackages
#-- Log files: specify a fixed directory where all log files will be placed
#LOGDEST=/home/makepkglogs
#-- Packager: name/email of the person or organization building packages
#PACKAGER="John Doe <john@doe.com>"
#-- Specify a key to use for package signing
#GPGKEY=""

#########################################################################
# COMPRESSION DEFAULTS
#########################################################################
#
COMPRESSGZ=(gzip -c -f -1 -n)        # fastest gzip (level 1)
COMPRESSBZ2=(bzip2 -c -f -1)          # fastest bzip2 (level 1)
COMPRESSXZ=(xz -c -z -0)              # fastest xz (level 0)
COMPRESSZST=(zstd -c -T0 -1)          # fastest zstd (level 1) with multi-threading
COMPRESSLRZ=(lrzip -q -L0)            # fastest lrzip (level 0)
COMPRESSLZO=(lzop -q)                 # fastest lzop (default speed)
COMPRESSZ=(compress -c -f)            # fast but less efficient (no change)
COMPRESSLZ4=(lz4 -q)                  # fastest lz4 (default speed)
COMPRESSLZ=(lzip -c -0)               # fastest lzip (level 0)


#########################################################################
# EXTENSION DEFAULTS
#########################################################################
#
PKGEXT='.pkg.tar.lz4'
SRCEXT='.src.tar.gz'

#########################################################################
# OTHER
#########################################################################
#
#-- Command used to run pacman as root, instead of trying sudo and su
#PACMAN_AUTH=()
# vim: set ft=sh ts=2 sw=2 et:

